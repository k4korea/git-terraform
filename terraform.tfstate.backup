{
  "version": 4,
  "terraform_version": "0.13.3",
  "serial": 318,
  "lineage": "f447035f-559f-bcb3-3b2f-757d28beb3a9",
  "outputs": {},
  "resources": [
    {
      "mode": "managed",
      "type": "helm_release",
      "name": "ingress",
      "provider": "provider[\"registry.terraform.io/hashicorp/helm\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "atomic": false,
            "chart": "ingress-nginx",
            "cleanup_on_fail": false,
            "create_namespace": false,
            "dependency_update": false,
            "description": null,
            "devel": null,
            "disable_crd_hooks": false,
            "disable_openapi_validation": false,
            "disable_webhooks": false,
            "force_update": false,
            "id": "ingress",
            "keyring": null,
            "lint": false,
            "max_history": 0,
            "metadata": [
              {
                "app_version": "0.44.0",
                "chart": "ingress-nginx",
                "name": "ingress",
                "namespace": "nginx",
                "revision": 1,
                "values": "{}",
                "version": "3.25.0"
              }
            ],
            "name": "ingress",
            "namespace": "nginx",
            "postrender": [],
            "recreate_pods": false,
            "render_subchart_notes": true,
            "replace": false,
            "repository": "https://kubernetes.github.io/ingress-nginx",
            "repository_ca_file": null,
            "repository_cert_file": null,
            "repository_key_file": null,
            "repository_password": null,
            "repository_username": null,
            "reset_values": false,
            "reuse_values": false,
            "set": [],
            "set_sensitive": [],
            "skip_crds": false,
            "status": "failed",
            "timeout": 200,
            "values": [
              ""
            ],
            "verify": false,
            "version": "3.25.0",
            "wait": true
          },
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "mode": "managed",
      "type": "helm_release",
      "name": "kuberhealthy",
      "provider": "provider[\"registry.terraform.io/hashicorp/helm\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "atomic": false,
            "chart": "kuberhealthy",
            "cleanup_on_fail": false,
            "create_namespace": false,
            "dependency_update": false,
            "description": null,
            "devel": null,
            "disable_crd_hooks": false,
            "disable_openapi_validation": false,
            "disable_webhooks": false,
            "force_update": false,
            "id": "kuberhealthy",
            "keyring": null,
            "lint": false,
            "max_history": 0,
            "metadata": [
              {
                "app_version": "2.2.0",
                "chart": "kuberhealthy",
                "name": "kuberhealthy",
                "namespace": "kuberhealthy",
                "revision": 1,
                "values": "{\"check\":{\"daemonset\":{\"enabled\":false,\"extraEnvs\":null,\"image\":{\"repository\":\"kuberhealthy/daemonset-check\",\"tag\":\"v2.2.2\"},\"nodeSelector\":{\"node.kubernetes.io/role\":\"ops\"},\"runInterval\":\"15m\",\"timeout\":\"12m\"},\"deployment\":{\"enabled\":false,\"extraEnvs\":{\"CHECK_DEPLOYMENT_REPLICAS\":\"4\",\"CHECK_DEPLOYMENT_ROLLING_UPDATE\":\"true\",\"CHECK_SERVICE_ACCOUNT\":\"default\"},\"image\":{\"repository\":\"kuberhealthy/deployment-check\",\"tag\":\"v1.4.4\"},\"nodeSelector\":{\"node.kubernetes.io/role\":\"ops\"},\"runInterval\":\"10m\",\"timeout\":\"15m\"},\"dnsInternal\":{\"enabled\":false,\"extraEnvs\":{\"HOSTNAME\":\"kubernetes.default\"},\"image\":{\"repository\":\"kuberhealthy/dns-resolution-check\",\"tag\":\"v1.2.0\"},\"nodeSelector\":{\"node.kubernetes.io/role\":\"ops\"},\"runInterval\":\"2m\",\"timeout\":\"15m\"},\"networkConnection\":{\"enabled\":false,\"extraEnvs\":{\"CONNECTION_TARGET\":\"tcp://github.com:443\"},\"image\":{\"repository\":\"kuberhealthy/network-connection-check\",\"tag\":\"v0.1.0\"},\"nodeSelector\":{\"node.kubernetes.io/role\":\"ops\"},\"runInterval\":\"30m\",\"timeout\":\"10m\"},\"podRestarts\":{\"enabled\":false,\"extraEnvs\":{\"MAX_FAILURES_ALLOWED\":\"10\"},\"image\":{\"repository\":\"kuberhealthy/pod-restarts-check\",\"tag\":\"v2.2.1\"},\"nodeSelector\":{\"node.kubernetes.io/role\":\"ops\"},\"runInterval\":\"5m\",\"timeout\":\"10m\"},\"podStatus\":{\"enabled\":false,\"extraEnvs\":null,\"image\":{\"repository\":\"kuberhealthy/pod-status-check\",\"tag\":\"v1.2.2\"},\"nodeSelector\":{\"node.kubernetes.io/role\":\"ops\"},\"runInterval\":\"5m\",\"timeout\":\"15m\"}},\"checkReaper\":{\"enabled\":true,\"image\":{\"repository\":\"kuberhealthy/check-reaper\",\"tag\":\"v1.4.0\"},\"nodeSelector\":{\"node.kubernetes.io/role\":\"ops\"}},\"deployment\":{\"command\":[\"/app/kuberhealthy\"],\"env\":{},\"imagePullPolicy\":\"IfNotPresent\",\"maxSurge\":0,\"maxUnavailable\":1,\"nodeSelector\":{\"node.kubernetes.io/role\":\"ops\"},\"podAnnotations\":{},\"replicas\":1},\"image\":{\"repository\":\"kuberhealthy/kuberhealthy\",\"tag\":\"v2.2.0\"},\"prometheus\":{\"enableAlerting\":true,\"enableScraping\":true,\"enabled\":true,\"name\":\"prometheus\",\"release\":\"prometheus-operator\",\"serviceMonitor\":true},\"resources\":{\"limits\":{\"cpu\":\"400m\",\"memory\":\"500Mi\"},\"requests\":{\"cpu\":\"400m\",\"memory\":\"300Mi\"}},\"securityContext\":{\"allowPrivilegeEscalation\":false,\"enabled\":true,\"fsGroup\":999,\"readOnlyRootFilesystem\":true,\"runAsNonRoot\":true,\"runAsUser\":999},\"service\":{\"annotations\":{},\"externalPort\":80,\"type\":\"ClusterIP\"},\"tolerations\":{\"master\":false}}",
                "version": "2.2.0"
              }
            ],
            "name": "kuberhealthy",
            "namespace": "kuberhealthy",
            "postrender": [],
            "recreate_pods": false,
            "render_subchart_notes": true,
            "replace": false,
            "repository": "https://comcast.github.io/kuberhealthy/helm-repos",
            "repository_ca_file": null,
            "repository_cert_file": null,
            "repository_key_file": null,
            "repository_password": null,
            "repository_username": null,
            "reset_values": false,
            "reuse_values": false,
            "set": [
              {
                "name": "checkReaper.image.tag",
                "type": "",
                "value": "v1.4.0"
              }
            ],
            "set_sensitive": [],
            "skip_crds": false,
            "status": "deployed",
            "timeout": 300,
            "values": [
              "# Default values for kuberhealthy.\r\n# This is a YAML-formatted file.\r\n# Declare variables to be passed into your templates.\r\n\r\nprometheus:\r\n  enabled: true\r\n  name: \"prometheus\"\r\n  release: prometheus-operator\r\n  enableScraping: true\r\n  serviceMonitor: true\r\n  enableAlerting: true\r\n\r\nimage:\r\n  repository: kuberhealthy/kuberhealthy\r\n  tag: v2.2.0\r\n\r\nresources:\r\n  requests:\r\n    cpu: 400m\r\n    memory: 300Mi\r\n  limits:\r\n    cpu: 400m\r\n    memory: 500Mi\r\n\r\ntolerations:\r\n  # change to true to tolerate and deploy to masters\r\n  master: false\r\n\r\ndeployment:\r\n  replicas: 1\r\n  maxSurge: 0\r\n  maxUnavailable: 1\r\n  imagePullPolicy: IfNotPresent\r\n  nodeSelector:\r\n    node.kubernetes.io/role: ops\r\n  podAnnotations: {}\r\n  env: {}\r\n  command:\r\n  - /app/kuberhealthy\r\n  # args:\r\n\r\n# When enabled equals to true, runAsUser and fsGroup will be\r\n# included to all khchecks as specified below.\r\nsecurityContext:\r\n  enabled: true # if enabled is set to false, securityContext settings will not be applied at all in checker pod custom resources\r\n  runAsNonRoot: true\r\n  runAsUser: 999\r\n  fsGroup: 999\r\n  allowPrivilegeEscalation: false\r\n  readOnlyRootFilesystem: true\r\n\r\n# Please remember that changing the service type to LoadBalancer\r\n# will expose Kuberhealthy to the internet, which could cause\r\n# error messages shown by Kuberhealthy to be exposed to the\r\n# public internet.  It is recommended to create the service\r\n# with ClusterIP, then to manually edit the service in order to\r\n# securely expose the port in an appropriate way for your\r\n# specific environment.\r\nservice:\r\n  externalPort: 80\r\n  type: ClusterIP\r\n  #type: LoadBalancer\r\n  annotations: {}\r\n\r\ncheck:\r\n  daemonset:\r\n    enabled: false\r\n    runInterval: 15m\r\n    timeout: 12m\r\n    image:\r\n      repository: kuberhealthy/daemonset-check\r\n      tag: v2.2.2\r\n    extraEnvs:\r\n    nodeSelector:\r\n      node.kubernetes.io/role: ops\r\n  deployment:\r\n    enabled: false\r\n    runInterval: 10m\r\n    timeout: 15m\r\n    image:\r\n      repository: kuberhealthy/deployment-check\r\n      tag: v1.4.4\r\n    extraEnvs:\r\n      CHECK_DEPLOYMENT_REPLICAS: \"4\"\r\n      CHECK_DEPLOYMENT_ROLLING_UPDATE: \"true\"\r\n      CHECK_SERVICE_ACCOUNT: \"default\"\r\n    nodeSelector:\r\n      node.kubernetes.io/role: ops\r\n  dnsInternal:\r\n    enabled: false\r\n    runInterval: 2m\r\n    timeout: 15m\r\n    image:\r\n      repository: kuberhealthy/dns-resolution-check\r\n      tag: v1.2.0\r\n    extraEnvs:\r\n      HOSTNAME: \"kubernetes.default\"\r\n    nodeSelector:\r\n      node.kubernetes.io/role: ops\r\n  podRestarts:\r\n    enabled: false\r\n    runInterval: 5m\r\n    timeout: 10m\r\n    image:\r\n      repository: kuberhealthy/pod-restarts-check\r\n      tag: v2.2.1\r\n    extraEnvs:\r\n      MAX_FAILURES_ALLOWED: \"10\"\r\n    nodeSelector:\r\n      node.kubernetes.io/role: ops\r\n  podStatus:\r\n    enabled: false\r\n    runInterval: 5m\r\n    timeout: 15m\r\n    image:\r\n      repository: kuberhealthy/pod-status-check\r\n      tag: v1.2.2\r\n    extraEnvs:\r\n    nodeSelector:\r\n      node.kubernetes.io/role: ops\r\n  networkConnection:\r\n    enabled: false\r\n    runInterval: 30m\r\n    timeout: 10m\r\n    image:\r\n      repository: kuberhealthy/network-connection-check\r\n      tag: v0.1.0\r\n    extraEnvs:\r\n      CONNECTION_TARGET: \"tcp://github.com:443\"\r\n    nodeSelector:\r\n      node.kubernetes.io/role: ops\r\n\r\ncheckReaper:\r\n  enabled: true # Don't disable checkReaper, this flag exist to make e2e tests easier.\r\n  image:\r\n    repository: kuberhealthy/check-reaper\r\n    tag: v1.3.1\r\n  nodeSelector:\r\n    node.kubernetes.io/role: ops\r\n"
            ],
            "verify": false,
            "version": "2.2.0",
            "wait": false
          },
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "mode": "managed",
      "type": "helm_release",
      "name": "kuberhealthy-checks",
      "provider": "provider[\"registry.terraform.io/hashicorp/helm\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "atomic": false,
            "chart": "kuberhealthy-checks",
            "cleanup_on_fail": false,
            "create_namespace": false,
            "dependency_update": false,
            "description": null,
            "devel": null,
            "disable_crd_hooks": false,
            "disable_openapi_validation": false,
            "disable_webhooks": false,
            "force_update": false,
            "id": "kuberhealthy-checks",
            "keyring": null,
            "lint": false,
            "max_history": 0,
            "metadata": [
              {
                "app_version": "1.16.0",
                "chart": "kuberhealthy-checks",
                "name": "kuberhealthy-checks",
                "namespace": "kuberhealthy",
                "revision": 1,
                "values": "{\"filemeta_service\":{\"endpoint\":\"http://bit-nginx.default.svc.cluster.local:8080\"}}",
                "version": "0.1.1"
              }
            ],
            "name": "kuberhealthy-checks",
            "namespace": "kuberhealthy",
            "postrender": [],
            "recreate_pods": false,
            "render_subchart_notes": true,
            "replace": false,
            "repository": "./helm/charts",
            "repository_ca_file": null,
            "repository_cert_file": null,
            "repository_key_file": null,
            "repository_password": null,
            "repository_username": null,
            "reset_values": false,
            "reuse_values": false,
            "set": [
              {
                "name": "filemeta_service.endpoint",
                "type": "",
                "value": "http://bit-nginx.default.svc.cluster.local:8080"
              }
            ],
            "set_sensitive": [],
            "skip_crds": false,
            "status": "deployed",
            "timeout": 300,
            "values": null,
            "verify": false,
            "version": "0.1.1",
            "wait": true
          },
          "private": "bnVsbA==",
          "dependencies": [
            "helm_release.kuberhealthy"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "helm_release",
      "name": "metric-server",
      "provider": "provider[\"registry.terraform.io/hashicorp/helm\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "atomic": false,
            "chart": "metrics-server",
            "cleanup_on_fail": false,
            "create_namespace": false,
            "dependency_update": false,
            "description": null,
            "devel": null,
            "disable_crd_hooks": false,
            "disable_openapi_validation": false,
            "disable_webhooks": false,
            "force_update": false,
            "id": "metric-server",
            "keyring": null,
            "lint": false,
            "max_history": 0,
            "metadata": [
              {
                "app_version": "0.4.2",
                "chart": "metrics-server",
                "name": "metric-server",
                "namespace": "kube-system",
                "revision": 1,
                "values": "{\"extraArgs\":{\"kubelet-insecure-tls\":true,\"kubelet-preferred-address-types\":\"InternalIP\"}}",
                "version": "5.5.1"
              }
            ],
            "name": "metric-server",
            "namespace": "kube-system",
            "postrender": [],
            "recreate_pods": true,
            "render_subchart_notes": true,
            "replace": false,
            "repository": "https://charts.bitnami.com/bitnami",
            "repository_ca_file": null,
            "repository_cert_file": null,
            "repository_key_file": null,
            "repository_password": null,
            "repository_username": null,
            "reset_values": false,
            "reuse_values": false,
            "set": [],
            "set_sensitive": [],
            "skip_crds": false,
            "status": "deployed",
            "timeout": 300,
            "values": [
              "extraArgs:\r\n  kubelet-insecure-tls: true\r\n  kubelet-preferred-address-types: InternalIP\r\n##\r\n\r\n"
            ],
            "verify": false,
            "version": "5.5.1",
            "wait": false
          },
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "mode": "managed",
      "type": "helm_release",
      "name": "nginx",
      "provider": "provider[\"registry.terraform.io/hashicorp/helm\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "atomic": false,
            "chart": "nginx",
            "cleanup_on_fail": false,
            "create_namespace": false,
            "dependency_update": false,
            "description": null,
            "devel": null,
            "disable_crd_hooks": false,
            "disable_openapi_validation": false,
            "disable_webhooks": false,
            "force_update": false,
            "id": "bit-nginx",
            "keyring": null,
            "lint": false,
            "max_history": 0,
            "metadata": [
              {
                "app_version": "1.19.6",
                "chart": "nginx",
                "name": "bit-nginx",
                "namespace": "default",
                "revision": 1,
                "values": "null",
                "version": "8.3.0"
              }
            ],
            "name": "bit-nginx",
            "namespace": "default",
            "postrender": [],
            "recreate_pods": false,
            "render_subchart_notes": true,
            "replace": false,
            "repository": "https://charts.bitnami.com/bitnami",
            "repository_ca_file": null,
            "repository_cert_file": null,
            "repository_key_file": null,
            "repository_password": null,
            "repository_username": null,
            "reset_values": false,
            "reuse_values": false,
            "set": [],
            "set_sensitive": [],
            "skip_crds": false,
            "status": "deployed",
            "timeout": 900,
            "values": null,
            "verify": false,
            "version": "8.3.0",
            "wait": false
          },
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "mode": "managed",
      "type": "helm_release",
      "name": "thanos2",
      "provider": "provider[\"registry.terraform.io/hashicorp/helm\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "atomic": false,
            "chart": "thanos",
            "cleanup_on_fail": false,
            "create_namespace": false,
            "dependency_update": false,
            "description": null,
            "devel": null,
            "disable_crd_hooks": false,
            "disable_openapi_validation": false,
            "disable_webhooks": false,
            "force_update": false,
            "id": "thanos",
            "keyring": null,
            "lint": false,
            "max_history": 0,
            "metadata": [
              {
                "app_version": "0.18.0",
                "chart": "thanos",
                "name": "thanos",
                "namespace": "monitoring",
                "revision": 3,
                "values": "{\"bucketweb\":{\"enabled\":false},\"compactor\":{\"enabled\":true,\"persistence\":{\"enabled\":true,\"storageClass\":\"csi-hostpath-sc\"}},\"global\":{\"storageClass\":\"csi-hostpath-sc\"},\"metrics\":{\"enabled\":true,\"serviceMonitor\":{\"enabled\":true,\"namespace\":\"prometheus\"}},\"minio\":{\"accessKey\":{\"password\":\"minio\"},\"defaultBuckets\":\"thanos2\",\"enabled\":true,\"secretKey\":{\"password\":\"minio123\"}},\"objstoreConfig\":\"type: s3\\nconfig:\\n  bucket: thanos\\n  endpoint: thanos.minio.monitoring.svc.cluster.local:9000\\n  access_key: minio\\n  secret_key: minio123\\n  insecure: false\",\"query\":{\"dnsDiscovery\":{\"sidecarsNamespace\":\"monitoring\",\"sidecarsService\":\"kube-prometheus-prometheus-thanos\"},\"enabled\":true},\"queryFrontend\":{\"enabled\":false},\"ruler\":{\"alertmanagers\":[\"http://kube-prometheus-alertmanager.monitoring.svc.cluster.local:9093\"],\"config\":\"groups:\\n  - name: \\\"metamonitoring\\\"\\n    rules:\\n      - alert: \\\"PrometheusDown\\\"\\n        expr: absent(up{prometheus=\\\"monitoring/kube-prometheus\\\"})\",\"enabled\":true},\"storegateway\":{\"enabled\":true,\"persistence\":{\"enabled\":true,\"storageClass\":\"csi-hostpath-sc\"}}}",
                "version": "3.13.2"
              }
            ],
            "name": "thanos",
            "namespace": "monitoring",
            "postrender": [],
            "recreate_pods": false,
            "render_subchart_notes": true,
            "replace": false,
            "repository": "https://charts.bitnami.com/bitnami",
            "repository_ca_file": null,
            "repository_cert_file": null,
            "repository_key_file": null,
            "repository_password": null,
            "repository_username": null,
            "reset_values": false,
            "reuse_values": false,
            "set": [],
            "set_sensitive": [],
            "skip_crds": false,
            "status": "deployed",
            "timeout": 300,
            "values": [
              "\r\n\r\nglobal:\r\n#   imageRegistry: myRegistryName\r\n#   imagePullSecrets:\r\n#     - myRegistryKeySecretName\r\n  storageClass: csi-hostpath-sc\r\n\r\n## Objstore Configuration\r\n## Specify content for objstore.yml\r\n##\r\n\r\n\r\n\r\n# --\u003e 이거는 실제 value 확인안됨.\r\nobjstoreConfig: |-\r\n  type: s3\r\n  config:\r\n    bucket: thanos\r\n    endpoint: thanos.minio.monitoring.svc.cluster.local:9000\r\n    access_key: minio\r\n    secret_key: minio123\r\n    insecure: false\r\n#existingObjstoreSecret: my-thanos-objstore-secret\r\n\r\n#    endpoint: {{ include \"thanos.minio.fullname\" . }}.monitoring.svc.cluster.local:9000\r\n\r\n#query:\r\nquery:\r\n  enabled: true\r\n  dnsDiscovery:\r\n    sidecarsService: kube-prometheus-prometheus-thanos\r\n    sidecarsNamespace: monitoring\r\n\r\n#bucketweb:\r\nbucketweb:\r\n  ## Set to true to enable Thanos Bucket Web component\r\n  ##\r\n  enabled: false\r\n\r\n# #compactor\r\ncompactor:\r\n  ## Set to true to enable Thanos Compactor component\r\n  ##\r\n  enabled: true\r\n  persistence:\r\n    enabled: true\r\n    storageClass: \"csi-hostpath-sc\"\r\n\r\n# #storegateway:\r\nstoregateway:\r\n  ## Set to true to enable Thanos Store Gateway component\r\n  ##\r\n  enabled: true\r\n  persistence:\r\n    enabled: true\r\n    storageClass: \"csi-hostpath-sc\"\r\n\r\n\r\nruler:\r\n  enabled: true\r\n  alertmanagers:\r\n    - http://kube-prometheus-alertmanager.monitoring.svc.cluster.local:9093\r\n  config: |-\r\n    groups:\r\n      - name: \"metamonitoring\"\r\n        rules:\r\n          - alert: \"PrometheusDown\"\r\n            expr: absent(up{prometheus=\"monitoring/kube-prometheus\"})\r\n\r\n#queryFrontend:\r\nqueryFrontend:\r\n  ## Set to true to enable Thanos Query Frontend component\r\n  ##\r\n  enabled: false\r\n\r\n\r\n# receive:\r\n#   ## Set to true to enable Thanos Receive component\r\n#   ##\r\n#   enabled: true\r\n\r\n\r\n#--------------------------- 한개라도 건들명 에러 ------\r\n\r\n\r\n#Prometheus metrics\r\nmetrics:\r\n  enabled: true\r\n\r\n  ## Prometheus Operator ServiceMonitor configuration\r\n  ##\r\n  serviceMonitor:\r\n    enabled: true\r\n    ## Namespace in which Prometheus is running\r\n    ##\r\n    namespace: prometheus\r\n    ## Labels to add to the ServiceMonitor object\r\n    ##\r\n    # labels:\r\n    ## Interval at which metrics should be scraped.\r\n    ## ref: https://github.com/coreos/prometheus-operator/blob/master/Documentation/api.md#endpoint\r\n    ##\r\n    # interval: 10s\r\n    ## Timeout after which the scrape is ended\r\n    ## ref: https://github.com/coreos/prometheus-operator/blob/master/Documentation/api.md#endpoint\r\n    ##\r\n    # scrapeTimeout: 10s\r\n\r\n\r\nminio:\r\n  ## Set to true to deploy a MinIO(R) chart\r\n  ## to be used as an objstore for Thanos\r\n  ##\r\n  enabled: true\r\n\r\n  ## MinIO(R) credentials\r\n  ##\r\n  accessKey:\r\n    password: 'minio'\r\n  secretKey:\r\n    password: 'minio123'\r\n\r\n  ## Default MinIO(R) buckets\r\n  ##\r\n  defaultBuckets: 'thanos2'"
            ],
            "verify": false,
            "version": "3.13.2",
            "wait": false
          },
          "private": "bnVsbA=="
        }
      ]
    }
  ]
}
