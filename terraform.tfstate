{
  "version": 4,
  "terraform_version": "0.13.3",
  "serial": 203,
  "lineage": "f447035f-559f-bcb3-3b2f-757d28beb3a9",
  "outputs": {},
  "resources": [
    {
      "mode": "managed",
      "type": "helm_release",
      "name": "metric-server",
      "provider": "provider[\"registry.terraform.io/hashicorp/helm\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "atomic": false,
            "chart": "metrics-server",
            "cleanup_on_fail": false,
            "create_namespace": false,
            "dependency_update": false,
            "description": null,
            "devel": null,
            "disable_crd_hooks": false,
            "disable_openapi_validation": false,
            "disable_webhooks": false,
            "force_update": false,
            "id": "metric-server",
            "keyring": null,
            "lint": false,
            "max_history": 0,
            "metadata": [
              {
                "app_version": "0.4.2",
                "chart": "metrics-server",
                "name": "metric-server",
                "namespace": "kube-system",
                "revision": 1,
                "values": "{\"extraArgs\":{\"kubelet-insecure-tls\":true,\"kubelet-preferred-address-types\":\"InternalIP\"}}",
                "version": "5.5.1"
              }
            ],
            "name": "metric-server",
            "namespace": "kube-system",
            "postrender": [],
            "recreate_pods": true,
            "render_subchart_notes": true,
            "replace": false,
            "repository": "https://charts.bitnami.com/bitnami",
            "repository_ca_file": null,
            "repository_cert_file": null,
            "repository_key_file": null,
            "repository_password": null,
            "repository_username": null,
            "reset_values": false,
            "reuse_values": false,
            "set": [],
            "set_sensitive": [],
            "skip_crds": false,
            "status": "deployed",
            "timeout": 300,
            "values": [
              "extraArgs:\r\n  kubelet-insecure-tls: true\r\n  kubelet-preferred-address-types: InternalIP\r\n##\r\n\r\n"
            ],
            "verify": false,
            "version": "5.5.1",
            "wait": false
          },
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "mode": "managed",
      "type": "helm_release",
      "name": "prometheus",
      "provider": "provider[\"registry.terraform.io/hashicorp/helm\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "atomic": false,
            "chart": "kube-prometheus-stack",
            "cleanup_on_fail": false,
            "create_namespace": false,
            "dependency_update": false,
            "description": null,
            "devel": null,
            "disable_crd_hooks": false,
            "disable_openapi_validation": false,
            "disable_webhooks": false,
            "force_update": false,
            "id": "stack",
            "keyring": null,
            "lint": false,
            "max_history": 0,
            "metadata": [
              {
                "app_version": "0.45.0",
                "chart": "kube-prometheus-stack",
                "name": "stack",
                "namespace": "prometheus",
                "revision": 1,
                "values": "{\"grafana\":{\"enabled\":false},\"kube-state-metrics\":{\"replicas\":1},\"prometheus\":{\"prometheusSpec\":{\"enableAdminAPI\":true,\"query\":{\"maxSamples\":800000000},\"replicas\":1,\"resources\":{\"limits\":{\"cpu\":\"1000m\",\"memory\":\"1Gi\"},\"requests\":{\"cpu\":\"1000m\",\"memory\":\"1Gi\"}},\"storageSpec\":{\"volumeClaimTemplate\":{\"spec\":{\"accessModes\":[\"ReadWriteOnce\"],\"resources\":{\"requests\":{\"storage\":\"1Gi\"}},\"storageClassName\":\"csi-hostpath-sc\"}}}}},\"prometheusOperator\":{\"admissionWebhooks\":{\"enabled\":false},\"enabled\":true,\"tlsProxy\":{\"enabled\":false}}}",
                "version": "13.12.0"
              }
            ],
            "name": "stack",
            "namespace": "prometheus",
            "postrender": [],
            "recreate_pods": true,
            "render_subchart_notes": true,
            "replace": false,
            "repository": "https://prometheus-community.github.io/helm-charts",
            "repository_ca_file": null,
            "repository_cert_file": null,
            "repository_key_file": null,
            "repository_password": null,
            "repository_username": null,
            "reset_values": false,
            "reuse_values": false,
            "set": [
              {
                "name": "grafana.enabled",
                "type": "",
                "value": "false"
              },
              {
                "name": "prometheus.prometheusSpec.replicas",
                "type": "",
                "value": "1"
              },
              {
                "name": "prometheus.prometheusSpec.resources.limits.cpu",
                "type": "",
                "value": "1000m"
              },
              {
                "name": "prometheus.prometheusSpec.resources.limits.memory",
                "type": "",
                "value": "1Gi"
              },
              {
                "name": "prometheus.prometheusSpec.resources.requests.cpu",
                "type": "",
                "value": "1000m"
              },
              {
                "name": "prometheus.prometheusSpec.resources.requests.memory",
                "type": "",
                "value": "1Gi"
              },
              {
                "name": "prometheusOperator.admissionWebhooks.enabled",
                "type": "",
                "value": "false"
              },
              {
                "name": "prometheusOperator.enabled",
                "type": "",
                "value": "true"
              },
              {
                "name": "prometheusOperator.tlsProxy.enabled",
                "type": "",
                "value": "false"
              }
            ],
            "set_sensitive": [],
            "skip_crds": false,
            "status": "deployed",
            "timeout": 9000,
            "values": [
              "\r\n# prometheusOperator:\r\n#   affinity:\r\n#     nodeAffinity:\r\n#       requiredDuringSchedulingIgnoredDuringExecution:\r\n#         nodeSelectorTerms:\r\n#           - matchExpressions:\r\n#             - key: node.kubernetes.io/role\r\n#               operator: In\r\n#               values:\r\n#               - ops\r\n  # resources:\r\n  #   limits:\r\n  #     cpu: 150m\r\n  #     memory: 300Mi\r\n  #   requests:\r\n  #     cpu: 150m\r\n  #     memory: 300Mi\r\nkube-state-metrics:\r\n  replicas: 1\r\nprometheus:\r\n  prometheusSpec:\r\n    enableAdminAPI: true\r\n    replicas: 1\r\n    # podAntiAffinity: \"hard\"\r\n    # affinity:\r\n    #   nodeAffinity:\r\n    #     requiredDuringSchedulingIgnoredDuringExecution:\r\n    #       nodeSelectorTerms:\r\n    #         - matchExpressions:\r\n    #           - key: node.kubernetes.io/role\r\n    #             operator: In\r\n    #             values:\r\n    #             - ops\r\n  \r\n   \r\n    query:\r\n      maxSamples: 800000000\r\n\r\n    storageSpec:\r\n      volumeClaimTemplate:\r\n        spec:\r\n          storageClassName: csi-hostpath-sc\r\n          accessModes: [\"ReadWriteOnce\"]\r\n          resources:\r\n            requests:\r\n              storage: 1Gi\r\n          \r\n\r\n    # additionalScrapeConfigs:\r\n    # # scrape config for service endpoints.\r\n    # - job_name: 'kubernetes-service-endpoints'\r\n    #   kubernetes_sd_configs:\r\n    #   - role: endpoints\r\n    #   relabel_configs:\r\n    #   - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scrape]\r\n    #     action: keep\r\n    #     regex: true\r\n    #   - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scheme]\r\n    #     action: replace\r\n    #     target_label: __scheme__\r\n    #     regex: (https?)\r\n    #   - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_path]\r\n    #     action: replace\r\n    #     target_label: __metrics_path__\r\n    #     regex: (.+)\r\n    #   - source_labels: [__address__, __meta_kubernetes_service_annotation_prometheus_io_port]\r\n    #     action: replace\r\n    #     target_label: __address__\r\n    #     regex: ([^:]+)(?::\\d+)?;(\\d+)\r\n    #     replacement: $1:$2\r\n    #   - action: labelmap\r\n    #     regex: __meta_kubernetes_service_label_(.+)\r\n    #   - source_labels: [__meta_kubernetes_namespace]\r\n    #     action: replace\r\n    #     target_label: kubernetes_namespace\r\n    #   - source_labels: [__meta_kubernetes_service_name]\r\n    #     action: replace\r\n    #     target_label: kubernetes_name\r\n    # - job_name: 'kubernetes-pods'\r\n    #   kubernetes_sd_configs:\r\n    #   - role: pod\r\n    #   relabel_configs:  # If first two labels are present, pod should be scraped  by the istio-secure job.\r\n    #   - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]\r\n    #     action: keep\r\n    #     regex: true\r\n    #   - source_labels: [__meta_kubernetes_pod_annotation_sidecar_istio_io_status]\r\n    #     action: drop\r\n    #     regex: (.+)\r\n    #   - source_labels: [__meta_kubernetes_pod_annotation_istio_mtls]\r\n    #     action: drop\r\n    #     regex: (true)\r\n    #   - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]\r\n    #     action: replace\r\n    #     target_label: __metrics_path__\r\n    #     regex: (.+)\r\n    #   - source_labels: [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]\r\n    #     action: replace\r\n    #     regex: ([^:]+)(?::\\d+)?;(\\d+)\r\n    #     replacement: $1:$2\r\n    #     target_label: __address__\r\n    #   - action: labelmap\r\n    #     regex: __meta_kubernetes_pod_label_(.+)\r\n    #   - source_labels: [__meta_kubernetes_namespace]\r\n    #     action: replace\r\n    #     target_label: namespace\r\n    #   - source_labels: [__meta_kubernetes_pod_name]\r\n    #     action: replace\r\n    #     target_label: pod_name"
            ],
            "verify": false,
            "version": "13.12.0",
            "wait": false
          },
          "private": "bnVsbA=="
        }
      ]
    }
  ]
}
